登录注册
	1、注册接口
		http:192.168.4.233:3000/users/register
		提供的数据：post请求
			username 
			password
			email
	2、登陆接口
		http://192.168.4.233:3000/users/login  post请求
			username
			password
	3、验证用户唯一性接口 post请求
		http://192.168.4.233:3000/users/checkuser
			username
	4、验证码接口
		http://192.168.4.233:3000/capt
	5、验证码数字接口
		http://192.168.4.233:3000/captnum
			get请求
	h5input表单中
		type=“email”邮箱
		1、为每一个input元素取name名字
			form action=“提交的地址“
			method提交的方式(全局刷新）
			得到结果实际是后台返回的数据，实现页面跳转这种方式是不能实现的。
			如果后台实现了页面的跳转，可以直接在form表单中去写
			jquery serialize()替代全页面刷新
			serialize()使用必须给form表单取id
			作用把表单中的数据取出来用&连结
			serialize()作用实现局部刷新
			serializeArray()可以把参数分解成数组，有可能被前端使用
		2、注册的简单逻辑：
			（1）验证码
				后台返给前台验证码，可以写cookie
				点击换验证码，点击时注意页面是否被访问。
				如果需要变换，加参数，时间戳，getTime()
				需要在验证码地址结尾加上new Date().getTime()
				验证码数字接口：jsonp访问
				实现验证
			(2)密码和确认密码的比较
				serializeArray()
			（3）注册相关信息必须输入
					required表示信息必须输入
				(4)checkbox协议框必须选中
				（5)检测用户名是否可以注册
					提供了一个接口
				(6)判断邮箱合法性
					indexOf
h5表单元素 novalidate不进行任何约束条件的检验
	required 必需的
h4表单元素：
		type=text文本框 
		type=password密码框 
		type=radio单选框 
		type=checkbox复选框 
		select下拉
		textarea多行文本框
		type=button普通按钮
		type=submit提交按钮
		type=reset重置 
		type=hidden隐藏域
H5增加的表单元素：
		滑块：<input type=“range”		
		邮箱 ：email
		网址：url
		颜色框 ：type=“color”
		文件框 ：type=“file”
		数字框：type=“number”
		日期： type=“date”
		月： type=“month”
		星期：type=“week”
		日期时间：type=“datetime”
		所有的input都有一个事件：change
	<select>下拉列表加multiple多选
头像
	form分为全局刷新和局部刷新
		图片上传地址：http://192.168.4.233:3000/uploadimg post
		type=file的name固定为imgfile
		上传文件，form表单中必须有
		enctype=“multipart/form-data”
		H5文件读取
			FileReader读文本读utf8的文本
			readAsText读文本文件
			readAsDataURL读路径
			事件：unload
		ajax局部刷新上传图片
			数据被formdata携带
			var formdata=new FormData()
			formdata.append(“键”，值）
			调用ajax时
				processData
				contentType
				cache三个键的值全部为false
登陆：
	http://192.168.4.233:3000/users/login
		username
		password
	登陆在每个模块都需要信息的验证
	登陆成功把信息记录在localStorage里面 
		靠h5存储技术
			sessionStorage存储用户登陆状态
		登出需要把sessionStorage里面存储的信息删除
			removeItem()删除指定的键值 
			clearItem()全部删除
	1、基本功能完成
	2、各个页面需要用户验证，这需要localStorage,sessionStorage记录信息，一般情况记录user的名字
	3、登出的时候需要把记录的信息去除掉
	4、注册一个主机，登陆一个主机，提供的地址不一样。（读写分离）
	5、csrf攻击
		防csrf攻击：1、前台的提交地址找不到
						2、密码和确认密码前台后台都要进行
						3、验证码前后台都要审核 
						4、<type=“hidden” value=“随机字符串“ cookie sessionStorage存一个值secret
		提交比较sessionStorage和hidden串值相不相等。不对拒绝提交。
		盗链
	http://192.168.4.233:3000/goodslist
	商品列表
	http://192.168.4.233:3000/fenlei
